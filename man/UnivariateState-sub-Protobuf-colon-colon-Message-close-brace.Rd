% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/protobuf_messages.R
\name{UnivariateState [Protobuf::Message]}
\alias{UnivariateState [Protobuf::Message]}
\title{Draws of the \code{SPMIX} samplers}
\format{
A Protobuf::Message with the following fields:
\describe{
\item{num_components}{An integer setting the number of components of the mixture.}
\item{atoms}{A repeated field of type \code{GroupParams}, a message that stores, for each areal location
\mjseqn{i=1,\dots,I}, the vector of weights \mjseqn{w_i} and the allocation variables \mjseqn{s_{ij}},
\mjseqn{j=1,\dots,N_{i}}.}
\item{rho}{A double storing the current value of \mjseqn{\rho}.}
\item{sigma}{An \code{EigenMatrix} message storing the matrix \mjseqn{\boldsymbol{\Sigma}}. The latter message
simply stores two integers for the dimensions of the matrix and a repeated field of double to store data
continuousy, as \emph{Eigen} does.}
\item{regression_coefficients}{A repeated packed field that stores the regression coefficients for each datum.
This field is set only in case covariates are passed as input in the sampler, so in case a Bayesian linear
regression is performed.}
}
}
\description{
\loadmathjax This protobuf message encodes the structure of the state of the samplers at a given iteration.
Using \code{\link{RProtoBuf}} package one can easily retrieve the descriptor and build it from scratch
or either parse it from a \code{.asciipb} file.
}
\examples{
# Retrieve message descriptor
RProtoBuf::readProtoFiles(system.file("proto/univariate_mixture_state.proto", package = "SPMIX"))
names(UnivariateState)

# Build a new message from scratch
params <- RProtoBuf::new(UnivariateState)

# Read from file (NOT RUN)
params <- RProtoBuf::readASCII(UnivariateState, file("path/to/file.asciipb"))

}
