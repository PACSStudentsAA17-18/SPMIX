# Setting compiler standard
CXX_STD = CXX17
NOCRANFLAGS = -Wno-attributes -Wno-ignored-attributes -Wno-deprecated-declarations
RTOOLS = $(shell $(echo '$(RTOOLS40_HOME)' | sed 's/\\/\//g'))

ifeq ($(R_ARCH), /x64)
FOLDER = $(RTOOLS)/mingw64
else
FOLDER = $(RTOOLS)/mingw32
endif

# GSL library flags
GSL_INC = $(shell $(FOLDER)/bin/gsl-config --cflags)
GSL_LIBS = $(shell $(FOLDER)/bin/gsl-config --libs)

# Google protocol buffers flags
PROTOBUF_INC = $(shell $(FOLDER)/bin/pkg-config --cflags protobuf)
PROTOBUF_LIBS = $(shell $(FOLDER)/bin/pkg-config --libs protobuf)

# Setting Package Flags
PKG_CXXFLAGS += $(shell "$(R_HOME)/bin$(R_ARCH)/Rscript.exe" -e "RcppParallel::CxxFlags()") \
                -D_REENTRANT -DSTAN_THREADS -DBOOST_MATH_DISABLE_DEPRECATED_03_WARNING $(GSL_INC) $(PROTOBUF_INC) \
                -I'.' -I'./optimization' -I'./polyagamma' -I'./cpp_proto' \
                -fopenmp $(NOCRANFLAGS)
PKG_LIBS = $(shell "$(R_HOME)/bin$(R_ARCH)/Rscript.exe" -e "RcppParallel::LdFlags()") \
           $(GSL_LIBS) $(PROTOBUF_LIBS) -lstdc++fs -fopenmp

# Setting Package sources and object files
PROTO_DIR = ../inst/proto
PROTO_SRC = $(wildcard $(PROTO_DIR)/*.proto)
SOURCES = $(sort $(wildcard *.cpp)) \
		  $(sort $(wildcard optimization/*.cpp)) \
		  $(sort $(wildcard polyagamma/*.cpp)) \
		  $(sort $(addprefix cpp_proto/, $(notdir $(PROTO_SRC:.proto=.pb.cc))))
OBJECTS = $(addsuffix .o, $(basename $(SOURCES)))

# Recipes
.PHONY = all

all: compile_protos $(SHLIB) clean

compile_protos:
	@mkdir -p cpp_proto
	@for file in $(PROTO_SRC); \
		do \
			$(FOLDER)/bin/protoc -I$(PROTO_DIR) --cpp_out=./cpp_proto $${file}; \
		done

clean: $(SHLIB)
	@if test "$(R_ARCH)" = "/x64"; then \
  	rm -rf $(HOME)/.R; \
  fi
